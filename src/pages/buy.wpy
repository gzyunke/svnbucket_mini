<style lang="scss">

    .title-text
    {
        position: relative;
        height: 88rpx;
        left: 30rpx;
        font-size: 16px;
        color: #7F8389;
        font-weight:600;
        line-height: 88rpx;
    }

    .list-item
    {
        position: relative;
        height: 88rpx;
        font-size: 16px;
        color: #7F8389;
        background-color: white;
        margin-bottom: 2rpx;
    }

    .left-text
    {
        position: relative;
        height: 88rpx;
        left: 30rpx;
        line-height: 88rpx;
    }

    .right-icon
    {
        position: absolute;
        right: 50rpx;
        top: 24rpx;
    }

    .ct-button
    {
        margin-top: 88rpx;
        width: 690rpx;
        background-color: #409EFF;
        color: white;
        height: 94rpx;
        line-height: 94rpx;
    }

    .red-text
    {
        color:red;
    }

    .tip-text
    {
        position: relative;
        width: 100%;
        font-size: 14px;
        color: #BBBBBB;
        display: block;
        line-height: 88rpx;
        text-align: center;
    }

</style>
<template>
    <view>
        <view class="title-text">选择空间</view>
        <repeat for="{{accountConfig}}" key="index" index="index" item="data">
            <view class="list-item" @tap="onSelectAccountType" data-info="{{data}}">
                <view class="left-text">{{data.name}}</view>
                <icon wx:if="{{accountType === data.accountType}}" type="success_no_circle" size="20" class="right-icon"/>
            </view>
        </repeat>

        <view class="title-text">选择时长</view>
        <repeat for="{{monthList}}" key="index" index="index" item="data">
            <view class="list-item" @tap="onSelectMonth" data-info="{{data}}">
                <view class="left-text">
                    {{data.month}}个月
                    <text wx:if="{{data.discount !== 100}}" class="red-text">（{{data.discount}}折）</text>
                </view>

                <icon wx:if="{{month === data.month}}" type="success_no_circle" size="20" class="right-icon"/>
            </view>
        </repeat>

        <button @tap="createOrder" class="ct-button">支付{{totalMoney}}元</button>

        <text class="tip-text">如需定制服务，请联系我们gzyunke@qq.com</text>

    </view>
</template>

<script>
    import wepy from 'wepy'
    import {tools} from '../common/tools'

    export default class Index extends wepy.page
    {
        config = {
            navigationBarTitleText: '购买空间',
        };


        data = {
            accountType:'3',
            month:12,
            buyType:'',
            maxAccountType:'',
            moneyDict:{},
            accountConfig:[],
            discountConfig:{},
            monthList:[
                {month:1, discount:100},
                {month:2, discount:100},
                {month:3, discount:100},
                {month:6, discount:88},
                {month:12, discount:83},
            ],
        }

        methods = {
            onSelectAccountType(e)
            {
                let info = e.currentTarget.dataset.info
                this.accountType = info.accountType
                console.log(this.accountType)
            },

            onSelectMonth(e)
            {
                let info = e.currentTarget.dataset.info
                this.month = info.month
                console.log(this.month)
            }
        }

        computed = {
            totalMoney ()
            {
                let discount = this.discountConfig[this.month]
                let money = this.moneyDict[this.accountType] * this.month
                if(discount)
                {
                    console.log(discount)
                    money = tools.round(money * discount, 2)
                    console.log(money)
                }
                return money
            }
        }

        getDatas()
        {
            wepy.request({
                url: '/api/shopConfig',
                method: 'POST',
                data: {
                }
            }).then(res =>
            {
                if(res.data.success === false)
                    return

                this.accountConfig = []
                for(let id in res.data.accountConfig)
                {
                    if(id === '0')
                        continue
                    let data = res.data.accountConfig[id]
                    let size = tools.formateSize(data.reposMaxSize)
                    this.moneyDict[id] = data.money
                    this.accountConfig.push({name:data.name + '，空间:' + size + '，' + data.money + '元/月', accountType:id})
                    this.maxAccountType = id
                }
                this.discountConfig = res.data.discountConfig
                this.$apply();
            })
        }

        createOrder()
        {
            wepy.request({
                url: '/api/createOrder',
                method: 'POST',
                data: {
                    accountType:this.accountType,
                    month:this.month,
                    buyType:0,
                    totalMoney: this.totalMoney,
                    isMiniProgram: true,
                }
            }).then(res =>
            {
                if(res.data.success === false)
                    return
                this.requestPay(res.data)
            })
        }

        async requestPay(orderData)
        {
            let res = await wepy.requestPayment({
                timeStamp: orderData.timestamp + "",
                nonceStr: orderData.noncestr,
                package: orderData.package,
                signType: orderData.signType,
                paySign: orderData.paySign,
            })

            console.log(res)
            if(res.errMsg === 'requestPayment:ok')
            {
                this.getUserInfo()
            }
        }

        getUserInfo()
        {
            wepy.request({
                url: '/api/userInfo',
                method: 'POST',
                data: {
                }
            }).then(res =>
            {
                if(res.data.success === false)
                    return
                this.$parent.globalData.userInfo = res.data;
                wepy.navigateBack()
            })
        }

        onLoad()
        {
            this.getDatas()
        }

    }
</script>
